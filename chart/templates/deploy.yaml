apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "storage.fullname" . }}
  labels:
    {{- include "storage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "storage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "storage.labels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: storage
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: {{ .Values.clusterService.ports.http }}
          volumeMounts:
            - name: config
              mountPath: /app/App.toml
              subPath: App.toml
            {{- with .Values.app.svc }}
            {{- $audience := .audience }}
            {{- range $secret, $mounts := .credentials }}
            {{- range $mounts }}
            - name: {{ include "storage.volumeMountName" (list $audience $secret) }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range .Values.app.audiences }}
            {{- $audience := .audience }}
            {{- range $secret, $mounts := .credentials }}
            {{- range $mounts }}
            - name: {{ include "storage.volumeMountName" (list $audience $secret) }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            {{- end }}
            {{- end }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | default "" | quote }}
            {{- end }}
            {{- if eq ( get .Values.env "CACHE_ENABLED" | int ) 1 }}
            - name: CACHE_URL
              valueFrom:
                secretKeyRef:
                  name: redis-storage-credentials
                  key: CACHE_URL
            {{- end }}
            - name: YANDEX_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: yandex-{{ .Values.app.s3.secret }}
                  key: key
            - name: YANDEX_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: yandex-{{ .Values.app.s3.secret }}
                  key: secret
            - name: YANDEX_AWS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: yandex-{{ .Values.app.s3.secret }}
                  key: endpoint
            - name: YANDEX_AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: yandex-{{ .Values.app.s3.secret }}
                  key: region
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "storage.fullname" . }}-app
        {{- with .Values.app.svc }}
        {{- $audience := .audience }}
        {{- range $secret, $mounts := .credentials }}
        - name: {{ include "storage.volumeMountName" (list $audience $secret) }}
          secret:
            secretName: {{ $secret }}
        {{- end }}
        {{- end }}
        {{- range .Values.audiences }}
        {{- $audience := .audience }}
        {{- range $secret, $mounts := .credentials }}
        - name: {{ include "storage.volumeMountName" (list $audience $secret) }}
          secret:
            secretName: {{ $secret }}
        {{- end }}
        {{- end }}
