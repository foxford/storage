apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "storage.labels" . | nindent 4 }}
  name: {{ include "storage.fullname" . }}-app
data:
  App.toml: |
    {{- $svcDict := .Values.app.svc | default dict }}
    {{- $id := list (include "storage.name" . ) (include "storage.audienceEnvironment" .) $svcDict.audience | compact | join "." }}
    id = {{ $id | quote }}

    [http]
    listener_address = "0.0.0.0:8080"

    [http.cors]
    allow_origins = "*"
    max_age = 86400

    ##
    ## S3-compatible underlying backends
    ##
    [backend]
    default = {{ .Values.app.s3.default | quote }}
    {{- range $key, $value := .Values.app.s3.alt }}
    [backend.alt.{{ $key }}]
    {{- if $value.proxyHost }}
    proxy_host = {{ $value.proxyHost | quote }}
    {{- end }}

    {{- if $value.proxyHosts }}
    {{- range $host := $value.proxyHosts }}
    [[backend.alt.{{ $key }}.proxy_hosts]]
    base = {{ $host.base | quote }}
    {{- if $host.aliasRangeUpperBound }}
    alias_range_upper_bound = {{ $host.aliasRangeUpperBound }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- println "" }}

    {{- with .Values.app.svc }}
    ##
    ## SVC
    ##

    {{- $svc_audience := list (include "storage.audienceEnvironment" $) .audience | compact | join "." }}
    [authn.{{ $svc_audience | quote }}]
    audience = [{{ $svc_audience | quote }}]
    algorithm = "ES256"
    key = {{ .authn.key | quote }}

    {{- $ns_audience := list (include "storage.audienceEnvironment" $) .audience | compact | join "."  }}
    {{- println "" }}

    {{- with .authz }}
    [authz.{{ $ns_audience | quote }}]
    type = {{ .type | quote }}
    trusted = [
      {{- range $account_label := .trusted }}
        {{ $ns_audience | list $account_label | join "." | quote }},
      {{- end }}
    ]
    {{- end }}
    {{- end }}

    {{- println "" }}
    {{- range .Values.app.audiences }}
    ##
    ## {{ .audience }}
    ##

    {{- $svc_audience := "" }}
    {{- $usr_audience := "" }}
    {{- if regexMatch "(?:talenttech)" .audience }}
    {{- $svc_audience = list (regexReplaceAll "(^(?:staging|testing)[\\d]*)" (include "storage.audienceEnvironment" $) "beta") "svc" .audience | compact | join "." }}
    {{- $usr_audience = list (regexReplaceAll "(^(?:staging|testing)[\\d]*)" (include "storage.audienceEnvironment" $) "beta") "usr" .audience | compact | join "." }}
    {{- else }}
    {{- $svc_audience = list (include "storage.audienceEnvironment" $) "svc" .audience | compact | join "." }}
    {{- $usr_audience = list (include "storage.audienceEnvironment" $) "usr" .audience | compact | join "." }}
    {{- end }}
    {{- with .authn }}
    [authn.{{ list "iam" $svc_audience | join "." | quote }}]
    audience = [{{ $svc_audience | quote }}, {{ $usr_audience | quote }}]
    algorithm = {{ default "ES256" .algorithm | quote }}
    key = {{ .key | quote }}
    {{- end }}

    {{- $ns_audience := "" }}
    {{- if regexMatch "(?:talenttech)" .audience }}
    {{- $ns_audience = list (regexReplaceAll "(^(?:staging|testing)[\\d]*)" (include "storage.audienceEnvironment" $) "beta") .audience | compact | join "."  }}
    {{- else }}
    {{- $ns_audience = list (include "storage.audienceEnvironment" $) .audience | compact | join "."  }}
    {{- end }}
    {{- println "" }}

    {{- with .authz }}
    [authz.{{ $ns_audience | quote }}]
    type = {{ .type | quote }}
    {{- if eq "http" .type }}
    {{- $default_authz_url := $ns_audience | list "http://dispatcher-cluster:8080/api/v1/authz/" | join "" }}
    uri = {{ default $default_authz_url .uri | quote }}
    algorithm = {{ default "ES256" .algorithm | quote }}
    key = {{ default "data/keys/svc.private_key.p8.der" .key | quote }}
    {{- if .trusted }}
    trusted = [
      {{- range $account_label := .trusted }}
        {{ (list $account_label (include "storage.audienceEnvironment" $) $.Values.app.svc.audience) | compact | join "." | quote }},
      {{- end }}
    ]
    {{- end }}
    {{- end }}
    {{- if eq "localwhitelist" .type }}
    [[authz.{{ $ns_audience | quote }}.records]]
    {{- range $record := .records }}
    subject_account_id = {{ get $record "subject_account_id" | quote }}
    object = [
      {{- range $o := get $record "object" }}
      {{ $o | quote }},
      {{- end}}
    ]
    action = {{ get $record "action" | quote }}
    {{- end }}
    {{- end }}
    {{- end }}

    [audiences_settings.{{ $ns_audience | quote }}]
    {{- if .allowedReferers}}
    allowed_referers = [ 
    {{- range $referer := .allowedReferers }}
      {{ $referer | quote }}, 
    {{- end }}
    ]
    {{- end }}
    {{- println "" }}
    {{- end }}
