app:
  image:
    tag: "1.2.3"
  s3:
    yandex:
      secret: yandex-storage-credentials
      proxyHosts:
        ru:
          base: router.example.org
          aliasRangeUpperBound: 2
  svc:
    audience: svc.test.net
    credentials:
      svc-pkcs8-der-credentials:
        - subPath: svc.private_key
          mountPath: /app/data/keys/svc.private_key.p8.der
        - subPath: svc.public_key
          mountPath: /app/data/keys/svc.public_key.p8.der
    authn:
      key: /app/data/keys/svc.public_key.p8.der
    authz:
      type: local
      trusted:
        - tq
  audiences:
    - audience: foo.bar
      credentials:
        foo-pkcs8-der-credentials:
          - subPath: iam.foo.public_key
            mountPath: /app/data/keys/iam.foo.public_key.p8.der
      authn:
        key: /app/data/keys/iam.foo.public_key.p8.der
      authz:
        type: http
      allowedReferers:
        - "test.net"
        - "*.test.net"
        - "foo.bar"
        - "*.foo.bar"
ingress:
  class: nginx
  host: test.net
legacyIngress:
  class: nginx
  host: example.org

maxmind:
  path: s3://path/to/db
  updateSchedule: "0 1 * * *"
  s3SecretName: "s3-yandex-apps-data-ro-credentials"
