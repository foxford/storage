---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
{{- if eq .Values.werf.env "production" }}
  annotations:
    "werf.io/replicas-on-creation": {{ pluck .Values.werf.env .Values.app.hpa.min_replicas | first | default .Values.app.hpa.min_replicas._default }}
{{- end }}
spec:
{{- if eq .Values.werf.env "production" }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 50%
{{- end }}
  replicas: {{ pluck .Values.werf.env .Values.app.hpa.min_replicas | first | default .Values.app.hpa.min_replicas._default }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        checksum/app-config: {{ include (print $.Template.BasePath "/09-app-cm.yaml") . | sha256sum }}
      labels:
        app: {{ .Chart.Name }}
    spec:
      imagePullSecrets:
      - name: registrysecret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ .Chart.Name }}
      volumes:
{{- include "volumes" . | indent 6 }}
      containers:
      - name: backend
        image: {{ .Values.werf.image.app }}
        imagePullPolicy: IfNotPresent
        command: ["/app/storage"]
        resources:
          requests:
            cpu: {{ pluck .Values.werf.env (index .Values.app.resources.cpu .Values.global.org .Values.global.app) | first | default (index .Values.app.resources.cpu .Values.global.org .Values.global.app)._default }}
            memory: {{ pluck .Values.werf.env (index .Values.app.resources.memory .Values.global.org .Values.global.app) | first | default (index .Values.app.resources.memory .Values.global.org .Values.global.app)._default }}
          limits:
            memory: {{ pluck .Values.werf.env (index .Values.app.resources.memory .Values.global.org .Values.global.app) | first | default (index .Values.app.resources.memory .Values.global.org .Values.global.app)._default }}
{{- include "probes" . | indent 8 }}
        env:
{{- include "envs" . | indent 8 }}
        volumeMounts:
{{- include "volumeMounts" . | indent 8 }}
        ports:
        - name: app
          containerPort: {{ pluck .Values.werf.env .Values.app.port | first | default .Values.app.port._default }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    app: {{ .Chart.Name }}
  ports:
    - name: app
      port: {{ pluck .Values.werf.env .Values.app.port | first | default .Values.app.port._default }}
